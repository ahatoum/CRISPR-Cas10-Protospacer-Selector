Instructions to Run the Code:

Download and place the two files (MainScript.py, GNfunctions.py) in the same directory. Edit the MainScript.py with your tag and genome sequence (variable gene). When the code runs, it creates a “Results.txt” in the same directory that presents the tabulated results.


Code Description:

MainScript.py takes a gene sequence (in 5’-3’ direction) and crRNA 5’-tag (GGGACG) as user inputs, and as outputs, produces all possible 35-nucleotide protospacers that exhibit zero complementarity between the adjacent anti-tag region and the crRNA 5’-tag. The reverse complement of the tag is first obtained to generate a comparison template, an array of eight nucleotides. Within a loop, a window of eight nucleotides that progressively moves rightward is copied from the genome and compared to the template derived from the user’s tag. In this comparison, when corresponding nucleotides are “not” equal to each other, a logic true is produced. Then the results of these boolean comparisons are subjected to a logic AND operation among themselves, which yields true only when there is no match at any position between the nucleotides in the moving window and the template. As the loop proceeds, each time a logic true is produced, the beginning location of the segment  (moving window) is recorded in an array with respect to the original genome input, and a “possibility” counter is incremented by one. Once this loop is completed, another one begins and for each “match”, 35 nucleotides to the left of it is extracted from the gene sequence—this is the permissible protospacer. The reverse complement of the protospacer is also generated as an output to indicate the corresponding spacer sequence that would need to be cloned into editing and targeting constructs.